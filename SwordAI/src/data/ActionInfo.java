package data;

/**
 * 此类置于Main中初始化。以免在运行过程中调用还未初始化。
 * 
 * 此类除去计算过程。直接调取Move的方向
 * @author With You
 */
public final class ActionInfo {
	/**
	 * 移动偏移量
	 */
	public final static int[][] MOVE_OFFSET = { { 0 , 1 },
															  { 1 , 0 },
															  { 0 , -1 },
															  { -1 , 0 },
	
													};
	
//下面这种写法无实际作用
//如果是移动三步那就有4*4*4=64种情况，全部列出来不现实
//	public final static int[][][][] MOVE_TWO_OFFSET ;
	
	
	
	/**
	 *  占领区域
	 */
	public static enum ATTACK_FIELD{
		
		SPEAR (new int[][][] {
			//1
			{{0 , 1} , {0 , 2} , {0 , 3} , {0 , 4} },
			//2	{-1 , 0} , {-2 , 0} , {-3 , 0} , {-4 , 0}
			
			{{1 , 0} , {2 , 0} , {3 , 0} , {4 , 0}  },
			//3   {0 , -1} , {0 , -2} , {0 , -3} , {0 , -4}
			{ {0 , -1} , {0 , -2} , {0 , -3} , {0 , -4} },
			//4	{0 , -1} , {0 , -2} , {0 , -3} , {0 , -4}
			{{-1 , 0} , {-2 , 0} , {-3 , 0} , {-4 , 0} },
		}),
		SWORD (new int[][][] {
			{ {-1 , 0} , {-2 , 0} , {0 , 1} , {-1 , 1} , {0 , 2} },
			{ {0 , -1} , {0 , -2} , {1 , 0} , {1 , -1} , {2 , 0} },
			{ {-1 , 0} , {-2 , 0} , {0 , -1} , {-1 , -1} , {0 , -2} },
			{ {0 , 1} , {0 , 2} , {1 , 0} , {1 , 1} , {2 , 0} },
		}),
		BATTLEAX (new int[][][] {
			{ {-1 , -1} , {-1 , 0} , {-1 , 1} , {0 , -1} , {0 , 1} , {1 , -1} , {1 , 1} },
			{ {-1 , 1} , {-1 , 1} , {0 , -1} , {0 , 1} , {1 , -1} , {1 , 0} , {1 , 1} },
			{ {-1 , -1} , {-1 , 0} , {-1 , 1} , {0 , -1} , {1 , -1} , {1 , 0} , {1 , 1} },
			{ {-1 , -1} , {1 , -1} , {-1 , 0} , {1 , 0} , {-1 , 1} , {0 , 1} , {1 , 1} },
		}) ;
		/**
		 *  一维： 方向
		 *  二维： X
		 *  三维： Y
		 */
		public final int[][][] attack_Field;
		
		private ATTACK_FIELD(int [][][] attack_Field){
			this.attack_Field = attack_Field;
		}
		
	}
	
}
